// Generated by dedot cli

import type { GenericSubstrateApi } from 'dedot/types';
import type { Result, AccountId32Like, BytesLike, Bytes } from 'dedot/codecs';
import type {
  GenericContractQuery,
  GenericContractQueryCall,
  ContractCallOptions,
  GenericContractCallResult,
  ContractCallResult,
} from 'dedot/contracts';
import type { PopApiStatusCode, InkPrimitivesLangError } from './types';

export interface ContractQuery<ChainApi extends GenericSubstrateApi> extends GenericContractQuery<ChainApi> {
  /**
   * 1. PSP-22 Interface:
   * - total_supply
   * - balance_of
   * - allowance
   * - transfer
   * - transfer_from
   * - approve
   * - increase_allowance
   * - decrease_allowance
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0xdb6375a8
   **/
  totalSupply: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<bigint, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} owner
   * @param {ContractCallOptions} options
   *
   * @selector 0x0f755a56
   **/
  balanceOf: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      owner: AccountId32Like,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<bigint, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} owner
   * @param {AccountId32Like} spender
   * @param {ContractCallOptions} options
   *
   * @selector 0x6a00165e
   **/
  allowance: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      owner: AccountId32Like,
      spender: AccountId32Like,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<bigint, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} to
   * @param {bigint} value
   * @param {ContractCallOptions} options
   *
   * @selector 0x84a15da1
   **/
  transfer: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      to: AccountId32Like,
      value: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} from
   * @param {AccountId32Like} to
   * @param {bigint} value
   * @param {BytesLike} data
   * @param {ContractCallOptions} options
   *
   * @selector 0x0b396f18
   **/
  transferFrom: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      from: AccountId32Like,
      to: AccountId32Like,
      value: bigint,
      data: BytesLike,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} spender
   * @param {bigint} value
   * @param {ContractCallOptions} options
   *
   * @selector 0x681266a0
   **/
  approve: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      spender: AccountId32Like,
      value: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} spender
   * @param {bigint} value
   * @param {ContractCallOptions} options
   *
   * @selector 0xf551d422
   **/
  increaseAllowance: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      spender: AccountId32Like,
      value: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} spender
   * @param {bigint} value
   * @param {ContractCallOptions} options
   *
   * @selector 0xf998ebd9
   **/
  decreaseAllowance: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      spender: AccountId32Like,
      value: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   * 2. PSP-22 Metadata Interface:
   * - token_name
   * - token_symbol
   * - token_decimals
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0x53db29ae
   **/
  tokenName: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<Bytes, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0xd733ea17
   **/
  tokenSymbol: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<Bytes, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0x9715e3ca
   **/
  tokenDecimals: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<number, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   * 3. Asset Management:
   * - create
   * - start_destroy
   * - set_metadata
   * - clear_metadata
   * - asset_exists
   *
   * @param {number} id
   * @param {AccountId32Like} admin
   * @param {bigint} minBalance
   * @param {ContractCallOptions} options
   *
   * @selector 0xab700a1b
   **/
  create: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      admin: AccountId32Like,
      minBalance: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0x742cfc5f
   **/
  startDestroy: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {BytesLike} name
   * @param {BytesLike} symbol
   * @param {number} decimals
   * @param {ContractCallOptions} options
   *
   * @selector 0x0b787bb5
   **/
  setMetadata: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      name: BytesLike,
      symbol: BytesLike,
      decimals: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0x8dd60adf
   **/
  clearMetadata: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {ContractCallOptions} options
   *
   * @selector 0xaa6b65db
   **/
  assetExists: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<boolean, PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   * 4. PSP-22 Mintable & Burnable Interface:
   * - mint
   * - burn
   *
   * @param {number} id
   * @param {AccountId32Like} account
   * @param {bigint} amount
   * @param {ContractCallOptions} options
   *
   * @selector 0xcfdd9aa2
   **/
  mint: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      account: AccountId32Like,
      amount: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;

  /**
   *
   * @param {number} id
   * @param {AccountId32Like} account
   * @param {bigint} amount
   * @param {ContractCallOptions} options
   *
   * @selector 0xb1efc17b
   **/
  burn: GenericContractQueryCall<
    ChainApi,
    (
      id: number,
      account: AccountId32Like,
      amount: bigint,
      options: ContractCallOptions,
    ) => Promise<GenericContractCallResult<Result<[], PopApiStatusCode>, ContractCallResult<ChainApi>>>
  >;
}
